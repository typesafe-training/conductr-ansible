--- 
- name: Provision and configure a ConductR cluster on AWS
  hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - "{{ VARS_FILE }}"
    
  tasks:
    - name: Launch Seed
      local_action:
        module: ec2
        image: "{{ IMAGE }}"
        instance_type: "{{ INSTANCE_TYPE }}"
        keypair: "{{ KEYPAIR }}"
        region: "{{ EC2_REGION }}"
        group_id: "{{ NODE_SECURITY_GROUP }}"
        vpc_subnet_id: "{{ SUBNET_SEED }}"
        assign_public_ip: yes
        instance_tags:
          Name: "{{ TAG_NAME }}"
          Role: Seed Node
        count: 1
        wait: yes
      register: ec2

    - debug: msg="Seed node {{ ec2.instances[0].private_ip }} --- {{ ec2.instances[0].public_dns_name }}"

    - name: Add seed to seeds_public
      add_host:
        groupname: "seeds_public"
        hostname: "{{ ec2.instances[0].public_ip }}"

    - name: Add seed to seeds_private
      add_host:
        groupname: "seeds_private"
        hostname: "{{ ec2.instances[0].private_ip }}"

    - name: Add public ip to nodes
      add_host:
        groupname: "nodes"
        hostname: "{{ ec2.instances[0].public_ip }}"

    - name: Launch Nodes
      local_action:
        module: ec2
        image: "{{ IMAGE }}"
        instance_type: "{{ INSTANCE_TYPE }}"
        keypair: "{{ KEYPAIR }}"
        region: "{{ EC2_REGION }}"
        group_id: "{{ NODE_SECURITY_GROUP }}"
        vpc_subnet_id: "{{ item }}"
        assign_public_ip: yes
        instance_tags:
          Name: "{{ TAG_NAME }}"
          Role: Node
        count: 1
        wait: yes
      register: ec2
      with_items:
        - "{{ SUBNET1 }}"

    - name: Add public ip to nodes
      add_host:
        groupname: "nodes"
        hostname: "{{ item.instances[0].public_ip }}"
      with_items: "{{ ec2.results }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.instances[0].public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.results }}"

- name: Setup ConductR
  hosts: nodes
  user: "{{ REMOTE_USER }}"
  gather_facts: True
  sudo: True

# Get these from env to workaround https://github.com/ansible/ansible/issues/10638
  vars:
    aws_access_key:  "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    aws_secret_key:  "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"

  vars_files:
    - "{{ VARS_FILE }}"

  tasks:
    - include: java/tasks/main.yml
    - include: haproxy/tasks/main.yml
    - include: conductr/tasks/main.yml


